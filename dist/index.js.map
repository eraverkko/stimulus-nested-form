{"version":3,"file":"index.js","sources":["../src/form-builder.js","../src/index.js"],"sourcesContent":["export default class FormBuilder {\n  constructor(controller) {\n    this.controller = controller;\n  }\n\n  get forms() {\n    return this.controller.formTargets;\n  }\n\n  get template() {\n    return this.forms.slice(-1)[0];\n  }\n\n  get tags() {\n    return this.controller.constructor.tags;\n  }\n\n  get attributes() {\n    return this.controller.constructor.attributes;\n  }\n\n  get assocs() {\n    return this.controller.assocs;\n  }\n\n  run() {\n    let form = this.clone(this.template);\n    form.style.display = '';\n\n    let newIndex = this.forms.length + this.controller.startValue;\n    this.renewIndex(form, newIndex);\n\n    return form;\n  }\n\n  clone(template) {\n    let clone = template.cloneNode(true);\n    this.clear(clone);\n    this.setRadio(clone);\n    this.removePK(clone);\n    return clone;\n  }\n\n  clear(clone) {\n    clone.querySelectorAll('textarea, input[type=text]').forEach(elem => elem.value = '');\n    clone.querySelectorAll('input[type=radio], input[type=checkbox]').forEach(elem => elem.checked = false);\n    clone.querySelectorAll('option').forEach(elem => elem.selected = false);\n    clone.querySelectorAll('input[name$=\"[_destroy]\"]').forEach(elem => elem.removeAttribute('value'));\n  }\n\n  setRadio(clone) {\n    let names = Array.from(clone.querySelectorAll('input[name][type=radio]')).map(radio => radio.name);\n    let nameSet = new Set(names);\n    nameSet.forEach(name => {\n      let radios = Array.from(clone.querySelectorAll(`input[type=radio][name=\"${name}\"]`));\n      if (radios.every(radio => radio.checked == false)) {\n        radios[0].checked = true;\n      }\n    });\n  }\n\n  removePK(form) {\n    let regexps = this.assocs.map(assoc => new RegExp(`${assoc.description}(\\\\])?\\\\[\\\\d+\\\\]\\\\[${assoc.pk}\\\\]$`));\n\n    form.querySelectorAll('input[name][type=hidden]').forEach(elem => {\n      regexps.forEach(regexp => {\n        if (elem.name.match(regexp)) {\n          elem.remove();\n        }\n      });\n    });\n  }\n\n  renewIndex(form, newIndex) {\n    let selector = this.tags.join(', ');\n    let regexps = this.assocs.map(assoc => new RegExp(`(${assoc.description}(\\\\[|\\\\]\\\\[|_)?)\\\\d+`));\n\n    form.querySelectorAll(selector).forEach(elem => {\n      this.attributes.forEach(attr => {\n        let value = elem.getAttribute(attr);\n        if (!value) return;\n        regexps.forEach(regexp => {\n          value = value.replace(regexp, '$1' + newIndex);\n        });\n        elem.setAttribute(attr, value);\n      });\n    });\n  }\n}\n","import { Controller } from '@hotwired/stimulus';\nimport FormBuilder from './form-builder';\n\nexport default class extends Controller {\n  static targets = ['form'];\n  static values = {\n    start: { type: Number, default: 0 },\n    increment: { type: Number, default: 1 },\n    max: Number,\n    addPos: { type: String, default: 'last' },\n    associations: { type: Array, default: [''] },\n    suffixes: { type: Array, default: ['_attributes'] },\n    primaryKeys: { type: Array, default: ['id'] },\n  };\n\n  static tags = ['input', 'textarea', 'select', 'label'];\n  static attributes = ['id', 'name', 'for'];\n\n  get adder() {\n    return this.scope.findElement(`[data-action=\"${this.identifier}#add\"]`);\n  }\n\n  get assocs() {\n    let associations = [].concat(this.associationsValue);\n    let suffixes = [].concat(this.suffixesValue);\n    let primaryKeys = [].concat(this.primaryKeysValue);\n    return associations.map((assoc, i) => {\n      let suffix = suffixes[i] || suffixes[0];\n      let pk = primaryKeys[i] || primaryKeys[0];\n      return { description: `${assoc}${suffix}`, pk: pk };\n    });\n  }\n\n  initialize() {\n    this.builder = new FormBuilder(this);\n  }\n\n  add(e) {\n    for (let n=0; n<this.incrementValue; n++) {\n      let form = this.builder.run();\n\n      let event = this.dispatch('before-add', { detail: { form: form }});\n      if (event.defaultPrevented) continue;\n      this.addForm(form);\n      this.dispatch('after-add', { detail: { form: form }});\n\n      if (this.hasMaxForms()) break;\n    }\n\n    e.preventDefault();\n  }\n\n  remove(e) {\n    let form = e.target.closest(`[data-${this.identifier}-target=\"form\"]`);\n    if (!form) return;\n\n    let event = this.dispatch('before-remove', { detail: { form: form }});\n    if (event.defaultPrevented) return;\n    this.removeForm(form);\n    this.dispatch('after-remove', { detail: { form: form }});\n\n    e.preventDefault();\n  }\n\n  addForm(form) {\n    if (this.addPosValue == 'first') {\n      this.formTargets[0].before(form);\n    } else {\n      this.formTargets.slice(-1)[0].after(form);\n    }\n\n    setTimeout(() => {\n      form.querySelectorAll(`[data-controller=\"${this.identifier}\"]`).forEach(nestedForm => {\n        let controller = this.application.getControllerForElementAndIdentifier(nestedForm, this.identifier);\n        if (controller) {\n          controller.formTargets.forEach(form => controller.builder.removePK(form));\n        }\n      });\n    });\n\n    this.refresh();\n  }\n\n  removeForm(form) {\n    form.style.display = 'none';\n\n    let regexps = this.assocs.map(assoc => new RegExp(`${assoc.description}(\\\\])?\\\\[\\\\d+\\\\]\\\\[_destroy\\\\]`));\n\n    form.querySelectorAll('input[name][type=hidden]').forEach(elem => {\n      regexps.forEach(regexp => {\n        if (elem.name.match(regexp)) {\n          elem.value = '1';\n        }\n      });\n    });\n\n    this.refresh();\n  }\n\n  refresh() {\n    if (this.hasMaxForms()) {\n      this.toggleAdder(false);\n    } else {\n      this.toggleAdder(true);\n    }\n  }\n\n  hasMaxForms() {\n    return this.maxValue &&\n           this.formTargets.filter(form => form.style.display != 'none').length >= this.maxValue;\n  }\n\n  toggleAdder(enabled) {\n    if (this.adder) this.adder.disabled = !enabled;\n  }\n}\n"],"names":["FormBuilder","constructor","controller","this","forms","formTargets","template","slice","tags","attributes","assocs","run","form","clone","style","display","renewIndex","length","startValue","cloneNode","clear","setRadio","removePK","querySelectorAll","forEach","elem","value","checked","selected","removeAttribute","names","Array","from","map","radio","name","Set","radios","every","regexps","assoc","RegExp","description","pk","regexp","match","remove","newIndex","selector","join","attr","getAttribute","replace","setAttribute","Controller","adder","scope","findElement","identifier","associations","concat","associationsValue","suffixes","suffixesValue","primaryKeys","primaryKeysValue","i","initialize","builder","add","e","n","incrementValue","dispatch","detail","defaultPrevented","addForm","hasMaxForms","preventDefault","target","closest","removeForm","addPosValue","before","after","setTimeout","nestedForm","application","getControllerForElementAndIdentifier","refresh","toggleAdder","maxValue","filter","enabled","disabled","targets","values","start","type","Number","default","increment","max","addPos","String"],"mappings":"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"}